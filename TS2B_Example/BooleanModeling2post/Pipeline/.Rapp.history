cd Documents
ls
ls
cd
source("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigene 3/R/inference.R")
NCols=5#
NRows=7#
#
myMat<-matrix(runif(NCols*NRows), ncol=NCols)#
myMat
NCols=5#
NRows=5#
#
myMat<-matrix(runif(NCols*NRows), ncol=NCols)#
myMat
aracne.a(mi, eps=0.05)
aracne.a(myMat, eps=0.05)
aracne.a(myMat, eps=0.05)
source("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigene 3/R/ZZZ.R")
aracne.a(myMat, eps=0.05)
dyn.load(scr/*)
dyn.load("src/bridge")
dyn.load("src/bridge.c")
dyn.load(src/bridge.c)
dyn.load("src/bridge.c")
aracne.a(myMat, eps=0.05)
dyn.load("libs/ppc/parmiden.so")
dyn.load("parmiden.so")
dyn.load("parmiden.so",,F)
dyn.load("parmiden.so")
dyn.load("parmiden.so")
dyn.load("parmiden.so")
source("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/R/parmigene")
load("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/Meta/package.rds")
load("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/Meta/Rd.rds")
~/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/R/parmigene.rdb
~/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/libs/x86_64/parmigene.so
dyn.load(""~/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/libs/x86_64/parmigene.so")
dyn.load("~/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigeneMAC/libs/x86_64/parmigene.so")
aracne.a(myMat, eps=0.05)
NCols=5#
NRows=5#
#
myMat<-matrix(runif(NCols*NRows), ncol=NCols)#
myMat
aracne.a(myMat, eps=0.05)
NCols=5#
NRows=7#
#
myMat<-matrix(runif(NCols*NRows), ncol=NCols)#
myMat
NCols=7#
NRows=5#
#
myMat<-matrix(runif(NCols*NRows), ncol=NCols)#
myMat
knnmi.all(mat, k=3, noise=1e-12)
source("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigene 3/R/knnmi.R")
source("/Users/natalieyudin/Documents/Bioinformatics/RECOMB 2012 sub/refs From ISBRA/parmigene 3/R/knnmi.R")
knnmi.all(mat, k=3, noise=1e-12)
knnmi.all(myMat, k=3, noise=1e-12)
mi = knnmi.all(myMat, k=3, noise=1e-12)
aracne.a(mi, eps=0.05)
aracne.m(mi, eps=0.05)
aracne.m(mi, tau=0.05)
x=read.csv("fourGene.txt", header=TRUE)
x
x = read.delim('fourGene.txt', header = TRUE, sep = "\t")
x = read.delim('fourGene.txt', header = FALSE, sep = "\t")
x
x = [:1]
x
x[1]
x[1:3]
x
x[2:3]
x[3:4]
x
x [4]
x
x[1:2]
x[2:4]
x
x[2:5]
x = x[2:5]
x
x = x[-1]
x
x = read.delim('fourGene.txt', header = FALSE, sep = "\t")
x
x = x[2:5]
x
x = x[-1,]
x
mi = knnmi.all(x, k=3, noise=1e-12)
2+2
knnmi.all(mat, k=3, noise=1e-12)
mi = knnmi.all(myMat, k=3, noise=1e-12)
aracne.m(mi, eps=0.05)
aracne.a(mi, eps=0.05)
mi = knnmi.all(x, k=3, noise=1e-12)
aracne.a(mi, eps=0.05)
aracne.a(mi, eps=0.05)
mi = knnmi.all(x, k=3, noise=1e-12)
mi
res = aracne.a(mi, eps=0.05)
res
mi = knnmi.all(myMat, k=3, noise=1e-12)
mi
myMat
x
x = t(x)
x
mi = knnmi.all(x, k=3, noise=1e-12)
mi
res = aracne.a(mi, eps=0.05)
res
x = read.delim('jakStat.txt', header = FALSE, sep = "\t")
x
x = [-1,]
x = x[-1,]
x
x = x[-1,]
x
x = t(x)
x
mi = knnmi.all(x, k=3, noise=1e-12)
res = aracne.a(mi, eps=0.05)
res
